<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TemperatureValue</name>
    </assembly>
    <members>
        <member name="F:Ekstrand.Temperature.MinValue">
            <summary>
            Minimum value for a Temperature.
            </summary>
        </member>
        <member name="F:Ekstrand.Temperature.MaxValue">
            <summary>
            Maximum value for a Temperature.
            </summary>
        </member>
        <member name="M:Ekstrand.Temperature.#ctor(System.ValueType)">
            <summary>
            Create a new instance of Temperature with a Celsius value.
            </summary>
            <param name="value">Numeric Value Type in Celsius.</param>
        </member>
        <member name="M:Ekstrand.Temperature.#ctor(Ekstrand.TemperatureScaleTypes)">
            <summary>
            Create a new instance of Temperature with defined temperature scale.
            </summary>
            <param name="value">Enumeration TemperatureTypes</param>
        </member>
        <member name="M:Ekstrand.Temperature.#ctor(System.ValueType,Ekstrand.TemperatureScaleTypes)">
            <summary>
            Create a new instance of Temperature with a value in one of the defined scales.
            </summary>
            <param name="value">Numeric Value Type</param>
            <param name="temp">The scale the given value is in.</param>
        </member>
        <member name="M:Ekstrand.Temperature.IsNumeric(System.ValueType)">
            <summary>
            Check if given ValueType is a numeric type.
            </summary>
            <param name="value">ValueType to be type queried.</param>
            <returns>True iff ValueType given is a numeric type otherwise false.</returns>
        </member>
        <member name="M:Ekstrand.Temperature.RescaleToCelsius(System.Double,Ekstrand.TemperatureScaleTypes)">
            <summary>
            Rescale given value to Celsius.
            </summary>
            <param name="value">Double value to be rescaled.</param>
            <param name="tempType">TemperatureScaleType the given value is in.</param>
        </member>
        <member name="M:Ekstrand.Temperature.RescaleFromCelsius(Ekstrand.TemperatureScaleTypes)">
            <summary>
            Rescale from Celsius to any of the supported temperature scales.
            </summary>
            <param name="tempType">TemperatureScaleTypes to rescale to.</param>
            <returns>Returns the internal Celsius value rescaled to the given TemperatureScaleTypes value.</returns>
        </member>
        <member name="P:Ekstrand.Temperature.Value">
            <summary>
            The get accessor return a value based on its set temperature scale.
            The set accessor sets the value at the current temperature scale.
            </summary>
        </member>
        <member name="P:Ekstrand.Temperature.TemperatureScale">
            <summary>
            The get accessor returns the set temperature scale.
            </summary>
        </member>
        <member name="P:Ekstrand.Temperature.ValueAsCelsius">
            <summary>
            The get accessor returns the temperature value in Celsius scale.
            </summary>
        </member>
        <member name="P:Ekstrand.Temperature.ValueAsFahrenheit">
            <summary>
            The get accessor returns the temperature value in Fahrenheit scale.
            </summary>
        </member>
        <member name="P:Ekstrand.Temperature.ValueAsKelvin">
            <summary>
            The get accessor returns the temperature value in Kelvin scale.
            </summary>
        </member>
        <member name="P:Ekstrand.Temperature.ValueAsRankine">
            <summary>
            The get accessor returns the temperature value in Rankine scale.
            </summary>
        </member>
        <member name="M:Ekstrand.Temperature.ChangeScale(Ekstrand.TemperatureScaleTypes)">
            <summary>
            Change the current temperature scale to another.
            </summary>
            <param name="tempType">Enumeration TemperatureScaleTypes</param>
            <remarks>
            Changing the temperature scale would cause the currently value to be recalculated at the new scale.
            </remarks>
        </member>
        <member name="M:Ekstrand.Temperature.ChangeScale(System.ValueType,Ekstrand.TemperatureScaleTypes)">
            <summary>
            Change the current temperature value and scale.
            </summary>
            <param name="value">ValueType for temperature.</param>
            <param name="tempType">Enumeration TemperatureTypes</param>
        </member>
        <member name="M:Ekstrand.Temperature.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Ekstrand.Temperature.GetHashCode">
            <summary>
            Serves as the default hash function. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Ekstrand.Temperature.TryParse(System.String,Ekstrand.Temperature@)">
            <summary>
            Converts the string representation of a number to its double-precision 
            floating-point number equivalent. A return value indicates whether the 
            conversion succeeded or failed.
            </summary>
            <param name="str">A string containing a number to convert. </param>
            <param name="temp">When this method returns, contains the double-precision 
            floating-point number equivalent of the str parameter, if the conversion 
            succeeded, or false if the conversion failed. The conversion fails if the str
            parameter is null or String.Empty, is not a number in a valid format, or 
            represents a number less than MinValue or greater than MaxValue. This parameter 
            is passed uninitialized; any value originally supplied in result will be overwritten. </param>
            <returns></returns>
        </member>
        <member name="M:Ekstrand.Temperature.ToString">
            <summary>
            Return a formatted string of this object.
            </summary>
            <returns>Returns a string representation of this Temperature value.</returns>
        </member>
        <member name="M:Ekstrand.Temperature.ToString(System.String)">
            <summary>
            Return a formatted string of this object.
            </summary>
            <param name="format">String format values. "S" for scalar only, "SD" for scalar and degree symbol or "N" for scalar value only. </param>
            <returns>Return a formatted string based on given format value</returns>
        </member>
    </members>
</doc>
